server:
  port: 8080

spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      routes:
        - id: USER-SERVICE
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user/**
          filters:
              args:
                name: USER-SERVICE
                fallbackuri: forward:/userServiceFallBack
        - id: SOCKET-API
          uri: lb://SOCKET-API
          predicates:
            - Path=/api/**
          filters:
            - SocketServiceResolveFilter
#            args:
#              name: SOCKET-API
#              fallbackuri: forward:/socketApiFallBack
#        - id: DEPARTMENT-SERVICE
#          uri: lb://DEPARTMENT-SERVICE
#          predicates:
#            - Path=/departments/**
#          filters:
#            - name: CircuitBreaker
#              args:
#                name: DEPARTMENT-SERVICE
#                fallbackuri: forward:/departmentServiceFallBack

hystrix:
  command:
    fallbackcmd:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 4000

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, prometheus
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    prefer-ip-address: true
    hostname: eureka-0
  client:
    register-with-eureka: ${EUREKA_SERVER_ENABLED:false}
    fetch-registry: ${EUREKA_SERVER_ENABLED:false}
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL}

nameRegistry:
  socketApi: socket-api


redis:
  host: ${REDIS_HOST:localhost}
  port: ${REDIS_PORT:6379}